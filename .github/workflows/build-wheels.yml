name: Build Wheels

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }} (py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']
    env:
      # CPU-only builds
      FORCE_CUDA: "0"
      CMAKE_BUILD_PARALLEL_LEVEL: "4"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: macOS build flags (arm64 CPU/MPS)
        if: runner.os == 'macOS'
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=11.0" >> $GITHUB_ENV
          echo "ARCHFLAGS=-arch arm64" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV

      - name: Install build dependencies (CPU)
        run: |
          python -m pip install --upgrade pip
          pip install "setuptools>=68" wheel build ninja packaging
          # CPU wheels from PyPI (no extra index): OK on macOS & Linux
          pip install torch==2.4.1 torchvision==0.19.1

      - name: Build wheel (needs torch -> no isolation)
        run: python -m build --wheel --no-isolation -v

      - name: Build source distribution (single run)
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        run: python -m build --sdist --no-isolation -v

      - name: Install built wheel with extras and smoke test
        run: |
          WHEEL_FILE=$(ls dist/*.whl)
          pip install "$WHEEL_FILE[all]"
          python -c "import jatic_dota; print('import ok')"
          python -c "from jatic_dota import inference; print('inference import ok')"

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl
          if-no-files-found: error

      - name: Upload source distribution
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
          if-no-files-found: error